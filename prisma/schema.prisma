generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Player {
  id       String @id @default(cuid())
  username String @unique

  snapshots PlayerSnapshot[]
  views     PlayerView[]

  xp_competition_entries XPCompetitionEntry[]

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  lastFetchedAt DateTime @default(now())
}

model PlayerView {
  id       String   @id @default(cuid())
  playerId String
  player   Player   @relation(fields: [playerId], references: [id])
  ip       String
  viewedAt DateTime @default(now())

  @@index([playerId, ip, viewedAt])
}

model PlayerSnapshot {
  id String @id @default(cuid())

  timestamp DateTime @default(now())

  rank        Int
  totalXp     BigInt
  totalSkill  BigInt
  combatLevel BigInt
  loggedIn    Boolean

  quests_completed   Int
  quests_in_progress Int
  quests_not_started Int

  playerId String
  player   Player @relation(fields: [playerId], references: [id])

  skills     SkillSnapshot[]
  quests     QuestSnapshot[]
  activities ActivitySnapshot[]

  @@index([playerId, timestamp])
}

model SkillSnapshot {
  id         String         @id @default(cuid())
  snapshot   PlayerSnapshot @relation(fields: [snapshotId], references: [id])
  snapshotId String

  name  SkillName
  xp    BigInt
  rank  BigInt
  level BigInt
}

model QuestSnapshot {
  id         String         @id @default(cuid())
  snapshotId String
  snapshot   PlayerSnapshot @relation(fields: [snapshotId], references: [id])

  title        String
  status       String
  difficulty   Int
  members      Boolean
  questPoints  Int
  userEligible Boolean
}

model ActivitySnapshot {
  id         String         @id @default(cuid())
  snapshotId String
  snapshot   PlayerSnapshot @relation(fields: [snapshotId], references: [id])

  date    DateTime
  details String
  text    String
  token   String       @unique
  type    ActivityType
}

model XPCompetition {
  id String @id @default(cuid())

  name        String
  description String

  entries XPCompetitionEntry[]

  startDate DateTime
  endDate   DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model XPCompetitionEntry {
  id String @id @default(cuid())

  playerId String
  player Player @relation(fields: [playerId], references: [id])

  competitionId String
  competition XPCompetition @relation(fields: [competitionId], references: [id])

  startXP BigInt
  endXP BigInt?

  @@unique([playerId, competitionId])
}

enum ActivityType {
  DROP
  KILL
  QUEST
  LEVEL_UP
  CLAN
  TREASURE_TRAIL
}

enum SkillName {
  Attack
  Defence
  Strength
  Constitution
  Ranged
  Prayer
  Magic
  Cooking
  Woodcutting
  Fletching
  Fishing
  Firemaking
  Crafting
  Smithing
  Mining
  Herblore
  Agility
  Thieving
  Slayer
  Farming
  Runecrafting
  Hunter
  Construction
  Summoning
  Dungeoneering
  Divination
  Invention
  Archaeology
  Necromancy
}
